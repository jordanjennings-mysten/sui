---
source: crates/sui/src/unit_tests/upgrade_compatibility_tests.rs
expression: err
---
"Upgrade compatibility check failed with the following errors:\n- Struct ability mismatch: StructAbilityMismatchAdd\n  Old: []\n  New: [Copy, ]\n- Struct ability mismatch: StructAbilityMismatchChange\n  Old: [Copy, ]\n  New: [Drop, ]\n- Struct ability mismatch: StructAbilityMismatchRemove\n  Old: [Copy, ]\n  New: []\n- Struct field mismatch: StructFieldMismatchAdd\n  Old: [Field { name: Identifier(\"a\"), type_: U64 }, Field { name: Identifier(\"b\"), type_: U64 }]\n  New: [Field { name: Identifier(\"a\"), type_: U64 }, Field { name: Identifier(\"b\"), type_: U64 }, Field { name: Identifier(\"c\"), type_: U64 }]\n- Struct field mismatch: StructFieldMismatchChange\n  Old: [Field { name: Identifier(\"a\"), type_: U64 }, Field { name: Identifier(\"b\"), type_: U64 }]\n  New: [Field { name: Identifier(\"a\"), type_: U64 }, Field { name: Identifier(\"b\"), type_: U8 }]\n- Struct field mismatch: StructFieldMismatchRemove\n  Old: [Field { name: Identifier(\"a\"), type_: U64 }, Field { name: Identifier(\"b\"), type_: U64 }]\n  New: [Field { name: Identifier(\"a\"), type_: U64 }]\n- Struct missing: StructToBeRemoved\n- Struct type param mismatch: StructTypeParamMismatch\n  Old: [DatatypeTyParameter { constraints: [], is_phantom: false }, DatatypeTyParameter { constraints: [], is_phantom: false }]\n  New: [DatatypeTyParameter { constraints: [], is_phantom: false }]\n- Enum ability mismatch: EnumAbilityMismatchAdd\n  Old: []\n  New: [Copy, ]\n- Enum ability mismatch: EnumAbilityMismatchChange\n  Old: [Copy, ]\n  New: [Drop, ]\n- Enum ability mismatch: EnumAbilityMismatchRemove\n  Old: [Copy, ]\n  New: []\n- Enum new variant: EnumNewVariant\n  Old: [Variant { name: Identifier(\"A\"), fields: [] }, Variant { name: Identifier(\"B\"), fields: [] }, Variant { name: Identifier(\"C\"), fields: [] }]\n  New: [Variant { name: Identifier(\"A\"), fields: [] }, Variant { name: Identifier(\"B\"), fields: [] }, Variant { name: Identifier(\"C\"), fields: [] }, Variant { name: Identifier(\"D\"), fields: [] }]\n- Enum missing: EnumToBeRemoved\n  Enum { abilities: [], type_parameters: [], variants: [Variant { name: Identifier(\"A\"), fields: [] }, Variant { name: Identifier(\"B\"), fields: [] }] }\n- Enum variant missing: EnumVariantMissing\n  Variant { name: Identifier(\"B\"), fields: [] }\n- Function signature mismatch: function_add_arg\n  Old:\n    Params: []\n    Return: []\n  New:\n    Params: [U64]\n    Return: []\n- Function signature mismatch: function_change_arg\n  Old:\n    Params: [U64]\n    Return: []\n  New:\n    Params: [U8]\n    Return: []\n- Function signature mismatch: function_remove_arg\n  Old:\n    Params: [U64]\n    Return: []\n  New:\n    Params: []\n    Return: []\n- Function lost public visibility: function_to_have_public_removed"
